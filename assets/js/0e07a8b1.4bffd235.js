"use strict";(self.webpackChunkotiv_simulator_doc=self.webpackChunkotiv_simulator_doc||[]).push([[8765],{1452:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var o=t(4848),s=t(8453);const i={id:"Python",title:"Python",sidebar_label:"Python"},r="Python",c={id:"Airsim/Python",title:"Python",description:"This document covers the Python integration in Airsim.",source:"@site/docs/Airsim/Python.md",sourceDirName:"Airsim",slug:"/Airsim/Python",permalink:"/otivSimulator/docs/Airsim/Python",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Airsim/Python.md",tags:[],version:"current",frontMatter:{id:"Python",title:"Python",sidebar_label:"Python"},sidebar:"documentationSidebar",previous:{title:"Instance Segmentation",permalink:"/otivSimulator/docs/Airsim/InstanceSegmentation"},next:{title:"Vehicles",permalink:"/otivSimulator/docs/TrafficPlugin/Vehicles"}},l={},h=[{value:"Useful API Functions",id:"useful-api-functions",level:2},{value:"Connection Component",id:"connection-component",level:2},{value:"AirPythonConnecter Component",id:"airpythonconnecter-component",level:3},{value:"Configuration Example",id:"configuration-example",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.p,{children:"This document covers the Python integration in Airsim."}),"\n",(0,o.jsx)(n.h2,{id:"useful-api-functions",children:"Useful API Functions"}),"\n",(0,o.jsx)(n.p,{children:"Airsim provides a variety of useful API functions to interact with the simulator using Python. Here are a few key functions:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"client.simGetImages()"})}),": Captures images from the simulator."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"client.simGetObjectPose(object_name)"})}),": Gets the pose of a specified object."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"client.simSetObjectPose(object_name, pose)"})}),": Sets the pose of a specified object."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"client.moveToPositionAsync(x, y, z, velocity)"})}),": Commands a vehicle to move to a specified position at a given velocity."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"client.simPause(True/False)"})}),": Pauses or unpauses the simulation."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Refer to the ",(0,o.jsx)(n.a,{href:"https://microsoft.github.io/AirSim/apis/",children:"Airsim Python API documentation"})," for a comprehensive list of available functions."]}),"\n",(0,o.jsx)(n.h2,{id:"connection-component",children:"Connection Component"}),"\n",(0,o.jsx)(n.p,{children:"Airsim allows you to connect your Unreal Engine project to their Python API. To achieve this, you need to send a success message to Python so that it knows when the simulator is ready to connect. This involves adding an actor component to one actor, preferably the player character (tram). You can configure this component with the desired settings."}),"\n",(0,o.jsx)(n.h3,{id:"airpythonconnecter-component",children:"AirPythonConnecter Component"}),"\n",(0,o.jsxs)(n.p,{children:["The component you need to add is called the ",(0,o.jsx)(n.code,{children:"AirPythonConnecter"}),". This component sets up a UDP connection for Python to receive. You can configure the different network settings on the component:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Repeat"}),": It is recommended to leave this set to ",(0,o.jsx)(n.code,{children:"true"}),". This ensures the component continuously sends success messages, allowing the connection to be reestablished if lost."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Networking"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"UDPListen Port"}),": The port Unreal Engine will use to listen for messages from Python."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"UDPSend Port"}),": The port Unreal Engine will use to send messages to Python."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SuccesMessage"}),": The message that will be sent once the Unreal Engine project is ready to connect to Python."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"IPString"}),": The IP address that will be used to send the message."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,o.jsxs)(n.p,{children:["When configuring the ",(0,o.jsx)(n.code,{children:"AirPythonConnecter"})," component, be aware that changes to these settings may also require changes in your Python setup. The ",(0,o.jsx)(n.code,{children:"UDPListen/Send"})," ports are crucial for the communication between Unreal Engine and Python. The ",(0,o.jsx)(n.code,{children:"SuccesMessage"})," ensures Python knows when the simulator is ready. The ",(0,o.jsx)(n.code,{children:"IPString"})," defines the target IP address for the connection."]}),"\n",(0,o.jsx)(n.p,{children:"Example configuration in Unreal Engine:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:'Repeat: true\r\nUDPListen Port: 999\r\nUDPSend Port: 9988\r\nSuccesMessage: "LOAD_SUCCES"\r\nIPString: "127.0.0.1"\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);